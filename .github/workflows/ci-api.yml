# TODO: parameterize and make re-usable 
name: CI - Deploy API Changes
on:
  push:
    branches:
      - main
    paths:
      - 'apis/**'
  workflow_dispatch:
    
jobs:
  # Modified version of Azure's sample repo: https://github.com/Azure/azure-quickstart-templates/blob/master/.github/workflows/auto-fix.yml
  get_api_folder:
    name: "Get folder for modified API"
    runs-on: ubuntu-latest
    outputs:
      apiFolderPath: ${{ steps.apiInfo.outputs.apiFolderPath}}
      mainBicepPath: ${{ steps.apiInfo.outputs.mainBicepPath}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Find API folder
        id: apiInfo
        run: |
          git status
          # Get path of last file checked in
          pwd
          cd $GITHUB_WORKSPACE
          pwd
          LAST_PATH=$( git log --pretty="" --name-only -n 100 origin/main -- apis/**/* | grep -v ".github\|.devcontainer\|common-bicep" | head -1 )
          echo Last file modified: $LAST_PATH
          # Look for the main template file in this file's path or parents
          APIFOLDER_PATH=$( dirname "$LAST_PATH" )
          echo Last folder modified: $APIFOLDER_PATH
          TESTFOLDER_PATH=$APIFOLDER_PATH
          FOUNDFOLDER_PATH=
          while [ "$TESTFOLDER_PATH" != "." ]
          do
            echo "Looking for main template in $TESTFOLDER_PATH"
            MAINBICEP_PATH=$TESTFOLDER_PATH/main.bicep
            if [ -f "$MAINBICEP_PATH" ]; then
              FOUNDFOLDER_PATH=$TESTFOLDER_PATH
              echo Found main template in $FOUNDFOLDER_PATH
              break
            fi
            TESTFOLDER_PATH=$( dirname "$TESTFOLDER_PATH" )
          done
          if [ ! $FOUNDFOLDER_PATH ]; then
              echo "Could not find main.bicep in folder or parents of $APIFOLDER_PATH" 1>&2
              exit 1
          fi
          echo "::set-output name=apiFolderPath::$FOUNDFOLDER_PATH"
          echo "::set-output name=mainBicepPath::$MAINBICEP_PATH"
  
  validate_bicep:
    name: "Validate Bicep files"
    needs: get_api_folder
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate that bicep builds
        run: az bicep build -f main.bicep
        working-directory: ${{ needs.get_api_folder.outputs.apiFolderPath }}

  deployment:
    name: "Deploy API Bicep files"
    runs-on: ubuntu-latest
    needs: 
      - get_api_folder
      - validate_bicep
    environment: Prod
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Deploy API Revisions
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          template: ${{ needs.get_api_folder.outputs.mainBicepPath }}
          parameters: apimServiceName=${{ secrets.AZURE_APIM_NAME }}

          # NOTE: Parameter JSON files are currently not used. 
          # API configuration's are kept in Github secrets and passed in.
          # parameters: ${{ needs.get_api_folder.outputs.apiFolderPath }}/params.prod.json

          # Example of parameters from: https://github.com/Azure/apim-landing-zone-accelerator/blob/workflow-new/.github/workflows/es-apim.yml
          # parameters: > 
          #   workloadName=${{ fromJson(env.config).RESOURCE_NAME_PREFIX }} environment=${{ fromJson(env.config).ENVIRONMENT_TAG }} 
          #   vmUsername=${{ fromJson(env.config).VM_USERNAME }} vmPassword=${{ secrets.VM_PW }} 
          #   accountName=${{ secrets.ACCOUNT_NAME }} personalAccessToken=${{ secrets.PAT }} CICDAgentType=${{ fromJson(env.config).CICD_AGENT_TYPE}}
          #   appGatewayFqdn=${{ secrets.FQDN }} certificatePassword=${{ secrets.CERTPW }} appGatewayCertType=${{ fromJson(env.config).CERT_TYPE }}

        # Reference: https://github.com/marketplace/actions/azure-login#az-logout-and-security-hardening
      - name: Azure logout
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear