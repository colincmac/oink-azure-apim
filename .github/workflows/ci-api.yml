name: CI - Deploy API Changes
on:
  push:
    branches:
      - main
    paths:
      - 'apis/**'
  pull_request:
    branches:
      - main
    paths:
      - 'apis/**'

jobs:
  # Reference: https://dev.to/scienta/get-changed-files-in-github-actions-1p36
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.all}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get changed files
        id: changes
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} -- apis/**/*)"

  validate_bicep:
    name: "Validate Bicep files"
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: ${{fromJson(needs.changed_files.outputs.matrix)}}
    steps:
      - name: Checkout the code
        uses: actions/checkout@2

      - name: Validate that bicep builds
        run: az bicep build -f main.bicep
        working-directory: ${{ matrix.api }}

  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: changed_files
  #   environment: Prod
  #   steps:
  #     - uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: deploy
  #       uses: azure/arm-deploy@v1
  #       with:
  #         subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
  #         scope: subscription
  #         region: ${{ fromJson(env.config).AZURE_LOCATION }}
  #         template: ./reference-implementations/AppGW-IAPIM-Func/bicep/main.bicep
  #         parameters: > 
  #           workloadName=${{ fromJson(env.config).RESOURCE_NAME_PREFIX }} environment=${{ fromJson(env.config).ENVIRONMENT_TAG }} 
  #           vmUsername=${{ fromJson(env.config).VM_USERNAME }} vmPassword=${{ secrets.VM_PW }} 
  #           accountName=${{ secrets.ACCOUNT_NAME }} personalAccessToken=${{ secrets.PAT }} CICDAgentType=${{ fromJson(env.config).CICD_AGENT_TYPE}}
  #           appGatewayFqdn=${{ secrets.FQDN }} certificatePassword=${{ secrets.CERTPW }} appGatewayCertType=${{ fromJson(env.config).CERT_TYPE }}

