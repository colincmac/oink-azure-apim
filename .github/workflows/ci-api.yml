name: CI - Deploy API Changes
on:
  push:
    branches:
      - main
    # paths:
    #   - 'apis/**'
  pull_request:
    branches:
      - main
    # paths:
    #   - 'apis/**'

jobs:
  get_api_folder:
    runs-on: ubuntu-latest
    outputs:
      apiFolderPath: ${{ steps.apiInfo.outputs.apiFolderPath}}
      mainBicepPath: ${{ steps.apiInfo.outputs.mainBicepPath}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Find API folder
        id: apiInfo
        run: |
          git status
          # Get path of last file checked in
          pwd
          cd $GITHUB_WORKSPACE
          pwd
          LAST_PATH=$( git log --pretty="" --name-only -n 100 origin/main -- apis/**/* | head -1 )
          echo Last file modified: $LAST_PATH
          # Look for the main template file in this file's path or parents
          APIFOLDER_PATH=$( dirname "$LAST_PATH" )
          echo Last folder modified: $APIFOLDER_PATH
          TESTFOLDER_PATH=$APIFOLDER_PATH
          FOUNDFOLDER_PATH=
          while [ "$TESTFOLDER_PATH" != "." ]
          do
            echo "Looking for main template in $TESTFOLDER_PATH"
            MAINBICEP_PATH=$TESTFOLDER_PATH/main.bicep
            if [ -f "$MAINBICEP_PATH" ]; then
              FOUNDFOLDER_PATH=$TESTFOLDER_PATH
              echo Found main template in $FOUNDFOLDER_PATH
              break
            fi
            TESTFOLDER_PATH=$( dirname "$TESTFOLDER_PATH" )
          done
          if [ ! $FOUNDFOLDER_PATH ]; then
              echo "Could not find main.bicep in folder or parents of $APIFOLDER_PATH" 1>&2
              exit 1
          fi
          echo "::set-output name=apiFolderPath::$FOUNDFOLDER_PATH"
          echo "::set-output name=mainBicepPath::$MAINBICEP_PATH"
  validate_bicep:
    name: "Validate Bicep files"
    needs: get_api_folder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@2

      - name: Validate that bicep builds
        run: az bicep build -f main.bicep
        working-directory: ${{ needs.get_api_folder.outputs.apiFolderPath }}

  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: changed_files
  #   environment: Prod
  #   steps:
  #     - uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: deploy
  #       uses: azure/arm-deploy@v1
  #       with:
  #         subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
  #         scope: subscription
  #         region: ${{ fromJson(env.config).AZURE_LOCATION }}
  #         template: ./reference-implementations/AppGW-IAPIM-Func/bicep/main.bicep
  #         parameters: > 
  #           workloadName=${{ fromJson(env.config).RESOURCE_NAME_PREFIX }} environment=${{ fromJson(env.config).ENVIRONMENT_TAG }} 
  #           vmUsername=${{ fromJson(env.config).VM_USERNAME }} vmPassword=${{ secrets.VM_PW }} 
  #           accountName=${{ secrets.ACCOUNT_NAME }} personalAccessToken=${{ secrets.PAT }} CICDAgentType=${{ fromJson(env.config).CICD_AGENT_TYPE}}
  #           appGatewayFqdn=${{ secrets.FQDN }} certificatePassword=${{ secrets.CERTPW }} appGatewayCertType=${{ fromJson(env.config).CERT_TYPE }}

